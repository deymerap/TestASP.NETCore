// <auto-generated />
using System;
using Education.Persistence;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Education.Persistence.Migrations
{
    [DbContext(typeof(EducatioDBContext))]
    partial class EducatioDBContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Education.Domain.Course", b =>
                {
                    b.Property<Guid>("CourseId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<decimal>("Price")
                        .HasPrecision(14, 2)
                        .HasColumnType("decimal(14,2)");

                    b.Property<DateTime?>("PublishedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("CourseId");

                    b.ToTable("Courses");

                    b.HasData(
                        new
                        {
                            CourseId = new Guid("05f8e9f8-890a-404c-83b9-c72c8d2af30b"),
                            CreatedDate = new DateTime(2022, 1, 20, 23, 21, 42, 624, DateTimeKind.Local).AddTicks(7590),
                            Description = "Curso basico de Java",
                            Price = 20m,
                            PublishedDate = new DateTime(2023, 1, 20, 23, 21, 42, 624, DateTimeKind.Local).AddTicks(7599),
                            Title = "Curso de Java desde cero hasta avanzado"
                        },
                        new
                        {
                            CourseId = new Guid("e8557c65-fd50-47eb-8b65-f79021440a3a"),
                            CreatedDate = new DateTime(2022, 1, 20, 23, 21, 42, 624, DateTimeKind.Local).AddTicks(7606),
                            Description = "Curso basico de C#",
                            Price = 56m,
                            PublishedDate = new DateTime(2024, 1, 20, 23, 21, 42, 624, DateTimeKind.Local).AddTicks(7606),
                            Title = "Curso de C# desde cero hasta avanzado"
                        },
                        new
                        {
                            CourseId = new Guid("7af779fd-55ac-458e-915c-c547e031e2eb"),
                            CreatedDate = new DateTime(2022, 1, 20, 23, 21, 42, 624, DateTimeKind.Local).AddTicks(7608),
                            Description = "Curso basico de Net Core",
                            Price = 1000m,
                            PublishedDate = new DateTime(2024, 1, 20, 23, 21, 42, 624, DateTimeKind.Local).AddTicks(7608),
                            Title = "Curso de Net Core desde cero hasta avanzado"
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
